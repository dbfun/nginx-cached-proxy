# Настройки кеша
proxy_cache_path /tmp/nginx   # путь
  levels=1:2                  # количество уровней
  keys_zone=stale_cache:10m   # название:размер зоны, 1Мб ~ 8000 ключей (1 ключ - 1 запрос)
  max_size=10g                # размер данных кеша, при превышении удаляются наиболее старые
  inactive=180m               # время хранения запроса на диске с момента последнего обращения, независимо от Cache-Control
  use_temp_path=off;          # off - используем proxy_cache_path; on - используем proxy_temp_path, указанный в location

server {

  listen                      80;
  error_log                   off;
  access_log                  off;

  # настройки таймаута
  proxy_connect_timeout       5;
  proxy_send_timeout          5;
  proxy_read_timeout          5;
  send_timeout                5;

  # Какой кеш использовать? Инструкцию можно использовать на уровне location
  proxy_cache stale_cache;

  location / {
    # Заголовок:
    #   HIT - из кеша
    #   MISS - с сервера
    #   EXPIRED - время кеширования истекло, взято с сервера
    #   STALE - сервер не отвечает, использовано из кеша
    add_header X-Cache-Status $upstream_cache_status;
    add_header X-Upstream-Status $upstream_status;
    add_header X-Time-Local $time_local;

    # Опционально можно игнорировать заголовки:
    # proxy_ignore_headers Expires Cache-Control Set-Cookie;

    # В некоторых случая можно включить proxy_cache_methods, если данные получаются методом POST (есть случаи)
    # proxy_cache_methods GET HEAD POST;

    # задаем ключ для кэширования @see https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_key
    # можно настроить на уровне сессиий, используя $cookie_jsessionid
    proxy_cache_key $scheme$proxy_host$uri$is_args$args;

    # Задаем минимальное время кеширования, поэтому по возможности данные будут браться с бека,
    # но если бек не будет отвечать, возьмется из кеша
    add_header Cache-Control "max-age=1,stale-while-revalidate=30,stale-if-error=1200";

    # задаем параметры кеширования
    proxy_cache_valid 200 2s;

    # если нужно минимизировать число обращений к проксированным серверам,
    # выставляем опцию proxy_cache_lock
    # @see https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_lock

    # Если источник "отвалился", будем отдавать с диска
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504 updating;
    # но будем обновляться в фоне - опционально
    proxy_cache_background_update on;

    # Исключить из кеширования: @see [proxy_cache_bypass](https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass)

    # Резолвер (вписан для Докера)
    resolver 127.0.0.11 ipv6=off;

    # Куда проксировать - источник данных
    proxy_pass http://$http_host$uri$is_args$args;
  }
}
